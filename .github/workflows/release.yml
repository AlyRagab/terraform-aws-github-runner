name: Release build

on:
  [push]
  #   branches:
  #     - master
  #   tags:
  #     - *
  # pull_request:
  #   paths:
  #     - .github/workflows/lambda-runner-binaries-syncer.yml
  #     - "modules/runner-binaries-syncer/lambdas/runner-binaries-syncer/**"

jobs:
  release:
    name: Build runners distribution
    runs-on: ubuntu-latest
    container: node:12
    env:
      lambda_webhook_name: webhook
      lambda_runners_name: scale-runners
      lambda_syncer_name: runner-binaries-syncer
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - uses: actions/checkout@v2

      - name: Add zip
        run: apt update && apt install zip

      - name: Lambda webhook - build
        env:
          lambda_path: modules/webhook/lambdas/webhook
        working-directory: modules/webhook/lambdas/webhook
        run: yarn install && yarn dist
      - name: Lambda webhook - Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.lambda_path }}/${{ env.lambda_runners_name }}.zip
          asset_name: ${{ env.lambda_syncer_name }}-${{ steps.tag_name.outputs.TAG }}.zip
          asset_content_type: application/zip

      - name: Lambda syncer - build
        env:
          lambda_path: modules/runner-binaries-syncer/lambdas/runner-binaries-syncer
        working-directory: modules/runner-binaries-syncer/lambdas/runner-binaries-syncer
        run: yarn install && yarn dist
      - name: Lambda syncer - Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.lambda_path }}/${{ env.lambda_runners_name }}.zip
          asset_name: ${{ env.lambda_syncer_name }}-${{ steps.tag_name.outputs.TAG }}.zip
          asset_content_type: application/zip

      - name: Lambda scale runners - build
        env:
          lambda_path: modules/runners/lambdas/scale-runners
        working-directory: modules/runners/lambdas/scale-runners
        run: yarn install && yarn dist
      - name: Lambda scale runners - Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.lambda_path }}/${{ env.lambda_runners_name }}.zip
          asset_name: ${{ env.lambda_runners_name }}-${{ steps.tag_name.outputs.TAG }}.zip
          asset_content_type: application/zip
  # release_draft:
  #   name: Create Draft Release
  #   needs: build
  #   runs-on: ubuntu-latest
  #   container: node:12
  #   if: startsWith(github.ref, 'refs/tags/')
  #   steps:
  #     - name: Create Release
  #       uses: actions/create-release@latest
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         draft: true
  #         prerelease: true
  #     - uses: actions/checkout@v2
  #     - name: Extract tag name
  #       id: tag_name
  #       run: echo ::set-output name=TAG::${GITHUB_REF##*/}
  #     - uses: actions/download-artifact@v2
  #       with:
  #         path: artifacts
  #     - name: Create zip
  #       run: |
  #         apt update && apt install zip
  #         cd dist && zip -r ../${lambda_name}.zip .
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@latest
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         draft: true
  #         prerelease: true
  #     - name: Upload Release Asset
  #       id: upload-release-asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
  #         asset_path: ${{ env.lambda_name }}.zip
  #         asset_name: ${{ env.lambda_name }}-${{ steps.tag_name.outputs.TAG }}.zip
  #         asset_content_type: application/zip
